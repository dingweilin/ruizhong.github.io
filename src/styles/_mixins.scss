// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'mobile' {
    @media (max-width: #{$breakpoint-mobile - 1px}) {
      @content;
    }
  } @else if $breakpoint == 'pad' {
    @media (min-width: #{$breakpoint-mobile}) and (max-width: #{$breakpoint-pad - 1px}) {
      @content;
    }
  } @else if $breakpoint == 'pc' {
    @media (min-width: #{$breakpoint-pad}) {
      @content;
    }
  } @else if $breakpoint == 'mobile-and-pad' {
    @media (max-width: #{$breakpoint-pad - 1px}) {
      @content;
    }
  } @else if $breakpoint == 'pad-and-pc' {
    @media (min-width: #{$breakpoint-mobile}) {
      @content;
    }
  }
}


@function px2rem($px) {
  @return $px / 75 * 1rem;
}
// 全局导出px2rem函数，使其在所有组件中可用

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 文本截断
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本截断
@mixin text-ellipsis-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 移动端1px边框
@mixin border-1px($position: bottom, $color: $border-color) {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    background-color: $color;
    
    @if $position == 'bottom' {
      left: 0;
      bottom: 0;
      width: 100%;
      height: 1px;
      transform: scaleY(0.5);
      transform-origin: 0 100%;
    } @else if $position == 'top' {
      left: 0;
      top: 0;
      width: 100%;
      height: 1px;
      transform: scaleY(0.5);
      transform-origin: 0 0;
    } @else if $position == 'left' {
      left: 0;
      top: 0;
      width: 1px;
      height: 100%;
      transform: scaleX(0.5);
      transform-origin: 0 0;
    } @else if $position == 'right' {
      right: 0;
      top: 0;
      width: 1px;
      height: 100%;
      transform: scaleX(0.5);
      transform-origin: 100% 0;
    } @else if $position == 'all' {
      left: 0;
      top: 0;
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      transform-origin: 0 0;
      border: 1px solid $color;
      box-sizing: border-box;
    }
  }
}

// Flex布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
} 